/* CSS RESET */
/* This effectively clears all pre-existing styles and gives you a clean slate browser. */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root {
  --main-background-color: #ababab;
  --header-background-color: #e7e8e9;
  --sidebar-background-color: #161717;
}

body {
  height: 100vh;
  display: grid;
  /* This creates two columns(vertical) - 1 thats 300px wide, the other column takes up the remaining space. */
  /* It is easier to use fraction than hard-coding a value because it is inaccurate. */
  grid-template-columns: 300px 1fr;
  /* Same with above but with rows(horizontal.) */
  grid-template-rows: 60px 1fr;

  /* Defines the grid layout area.*/
  grid-template-areas:
    "side header"
    "side main";
}

.main {
  background-color: var(--main-background-color);

  /* Add padding around the main container */
  padding: 25px;
  /* Line-based grid positioning */
  /* grid-row: 2 / 3;
  grid-column: 2 / 3; */

  /* Grid-template-area based positioning */
  grid-area: main;

  /* Add the grid properties to target the 6 divs inside. */
  /* The main element can be a grid container as well with relation to the divs inside it. */
  display: grid;

  /* Define a 3x3 grid inside main */
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr 1fr;

  /* Layout of the 6 cards using named grid areas */
  grid-template-areas:
    "c1 c2 c3"
    "c4 c4 c5"
    "c4 c4 c6";

  /* Spacing between grid items */
  gap: 20px;
}

.header {
  background-color: var(--header-background-color);

  /* Line-based grid positioning */
  /* grid-column: 2 / 3;
  grid-row: 1 / 2; */

  /* Grid-template-area based positioning */
  grid-area: header;
}

.sidebar {
  background-color: var(--sidebar-background-color);

  /* Line-based grid positioning */
  /* grid-column: 1 / 2;
  grid-row: 1 / 3; */

  /* Grid-template-area based positioning */
  grid-area: side;
}

/* This will apply to all six card class under main element. */
.card {
  background-color: var(--header-background-color);
  border-radius: 10px;
}

/* Position each card in the grid using nth-child selectors */
.card:nth-child(1) {
  grid-area: c1;
}
.card:nth-child(2) {
  grid-area: c2;
}
.card:nth-child(3) {
  grid-area: c3;
}
.card:nth-child(4) {
  grid-area: c4;
}
.card:nth-child(5) {
  grid-area: c5;
}
.card:nth-child(6) {
  grid-area: c6;
}
